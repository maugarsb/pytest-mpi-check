^============================= test session starts ==============================
platform [^\n]*
cachedir: [^\n]*
metadata: [^\n]*
rootdir: [^\n]*
plugins: [^\n]*
collecting ... collected 2 items                                                              

(?# [This is a comment until the closing parenthesis]
    The following lines use the regex 'lookahead' mechanism to match the lines in any order
    This is useful because schedulers may not schedule tests in the same order
)(?=.*test_two_fail_tests_two_procs.py::test_fail_1\[2\] FAILED
)(?=.*test_two_fail_tests_two_procs.py::test_fail_2\[2\] FAILED
).*

=================================== FAILURES ===================================
(?=.*________________________________ test_fail_1\[2\] ________________________________

-------------------------------- On rank 0 of 2 --------------------------------
comm = <mpi4py.MPI.Intracomm object at [^\n]*>

    @pytest_parallel.mark.parallel\(2\)
    def test_fail_1\(comm\):
>     assert 0
E     assert 0

[^\n]*test_two_fail_tests_two_procs.py:5: AssertionError

-------------------------------- On rank 1 of 2 --------------------------------
comm = <mpi4py.MPI.Intracomm object at [^\n]*>

    @pytest_parallel.mark.parallel\(2\)
    def test_fail_1\(comm\):
>     assert 0
E     assert 0

[^\n]*test_two_fail_tests_two_procs.py:5: AssertionError
)(?=.*________________________________ test_fail_2\[2\] ________________________________

-------------------------------- On rank 0 of 2 --------------------------------
comm = <mpi4py.MPI.Intracomm object at [^\n]*>

    @pytest_parallel.mark.parallel\(2\)
    def test_fail_2\(comm\):
>     assert 0
E     assert 0

[^\n]*test_two_fail_tests_two_procs.py:9: AssertionError

-------------------------------- On rank 1 of 2 --------------------------------
comm = <mpi4py.MPI.Intracomm object at [^\n]*>

    @pytest_parallel.mark.parallel\(2\)
    def test_fail_2\(comm\):
>     assert 0
E     assert 0

[^\n]*test_two_fail_tests_two_procs.py:9: AssertionError
).*
=========================== short test summary info ============================
(?=.*FAILED [^\n]*test_two_fail_tests_two_procs.py::test_fail_1\[2\]
)(?=.*FAILED [^\n]*test_two_fail_tests_two_procs.py::test_fail_2\[2\]
).*
============================== 2 failed in [^\n]*s ===============================$
